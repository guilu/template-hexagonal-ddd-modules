plugins {
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'jacoco'
}

subprojects {

	group = 'com.emobg'
	version = '0.0.1'

	java {
		sourceCompatibility = JavaVersion.VERSION_21
	}

	apply plugin: 'java'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'java-library'
	apply plugin: 'jacoco-report-aggregation'

	repositories {
		mavenCentral()
	}

	dependencies {
		testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.5'
		testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.5'
		testImplementation 'org.assertj:assertj-core:3.17.2'

	}

	test {

		include '**/*UnitTest.class'
		include '**/*ApplicationTest.class'
		include '**/*IT.class'
		exclude("**/**DddTemplateApplication.class")
		testLogging.showStandardStreams(true)
		useJUnitPlatform()
		jvmArgs("-XX:+EnableDynamicAgentLoading")


	}

	jacocoTestReport {
		dependsOn test,testCodeCoverageReport

		group = "Reporting"
		reports {
			xml.getRequired().set(true)
			csv.getRequired().set(false)
			html.destination file("${rootProject.layout.buildDirectory.get()}/reports/coverage")

			doLast {
				copy {
					from layout.buildDirectory.dir("${project(":infrastructure").layout.buildDirectory.get()}/reports/jacoco/testCodeCoverageReport/html")
					into layout.buildDirectory.dir("${rootProject.layout.buildDirectory.get()}/reports/coverage")
				}
			}
		}

		afterEvaluate {
			classDirectories = files(classDirectories.files.collect {
				fileTree(dir: it,
						exclude: ['**/DddTemplateApplication**'])
			})
		}
	}


}